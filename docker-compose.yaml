version: "3"

volumes:
  pg_data:
  static:

services:

  frontend:
    env_file: docker.env

    build: ./frontend/

    command: cp -r /app/build/. /static/

    volumes:
      - static:/static

  db:
    image: postgres:17

    env_file: docker.env

    volumes:
      - pg_data:/var/lib/postgresql/data

    networks:
      - app_network

    restart: on-failure:3

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build: ./backend/

    env_file: docker.env

    depends_on:
      db:
        condition: service_healthy

    volumes:
      - static:/static


    networks:
      - app_network

    restart: on-failure:2

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 31s
      timeout: 11s
      retries: 3
      start_period: 41s

  gateway:
    build: ./gateway/

    env_file: docker.env

    ports:
      - "8080:80"

    volumes:
      - static:/static

    networks:
      - app_network

    depends_on:
      - backend

networks:
  app_network:
    driver: bridge
